[This tests the Part-B functions decrease-key, extract-min, and set-n-levels]
set-n-levels: 5
set-quake-ratio(1.0): successful
insert(1, X01): successful
insert(6, X06): successful
insert(30, X30): successful
insert(31, X31): successful
get-min-key: 1
decrease-key(X30, 0): successful
extract-min: X30
decrease-key(X31, 0): successful
extract-min: X31
insert(4, X04): successful
insert(9, X09): successful
insert(20, X20): successful
insert(50, X50): successful
get-min-key: 1
decrease-key(X50, 0): successful
extract-min: X50
insert(3, X03): successful
insert(16, X16): successful
insert(14, X14): successful
insert(60, X60): successful
insert(61, X61): successful
insert(62, X62): successful
insert(63, X63): successful
insert(64, X64): successful
get-min-key: 1
decrease-key(X60, 0): successful
extract-min: X60
decrease-key(X61, 0): successful
extract-min: X61
decrease-key(X62, 0): successful
extract-min: X62
decrease-key(X63, 0): successful
extract-min: X63
decrease-key(X64, 0): successful
extract-min: X64
get-min-key: 1
insert(10, X10): successful
insert(11, X11): successful
insert(40, X40): successful
insert(41, X41): successful
get-min-key: 1
decrease-key(X40, 0): successful
extract-min: X40
decrease-key(X41, 0): successful
extract-min: X41
insert(5, X05): successful
insert(8, X08): successful
get-min-key: 1
insert(21, X21): successful
list-heap:
  {lev: 0 nodeCt: 13}
  [21 X21]
  {lev: 1 nodeCt: 7}
  (5)
  [5 X05]
  [8 X08]
  {lev: 2 nodeCt: 4}
  (10)
  (10)
  [10 X10]
  [11 X11]
  [null]
  {lev: 3 nodeCt: 2}
  {lev: 4 nodeCt: 1}
  (1)
  (1)
  (1)
  (1)
  [1 X01]
  [6 X06]
  [null]
  (4)
  (4)
  [4 X04]
  [9 X09]
  (20)
  [20 X20]
  [null]
  (3)
  (3)
  (3)
  [3 X03]
  [14 X14]
  (16)
  [16 X16]
  [null]
  [null]
Structured list:
  {lev: 0 nodeCt: 13}
    Tree: 0
      [21 X21]
  {lev: 1 nodeCt: 7}
    Tree: 0
      | [5 X05]
      (5)
      | [8 X08]
  {lev: 2 nodeCt: 4}
    Tree: 0
      | | [10 X10]
      | (10)
      | | [11 X11]
      (10)
      | [null]
  {lev: 3 nodeCt: 2}
  {lev: 4 nodeCt: 1}
    Tree: 0
      | | | | [1 X01]
      | | | (1)
      | | | | [6 X06]
      | | (1)
      | | | [null]
      | (1)
      | | | | [4 X04]
      | | | (4)
      | | | | [9 X09]
      | | (4)
      | | | | [20 X20]
      | | | (20)
      | | | | [null]
      (1)
      | | | | [3 X03]
      | | | (3)
      | | | | [14 X14]
      | | (3)
      | | | | [16 X16]
      | | | (16)
      | | | | [null]
      | (3)
      | | [null]
[This is the first time we reduce the number of levels]
set-n-levels(3): successful
list-heap:
  {lev: 0 nodeCt: 13}
  [21 X21]
  {lev: 1 nodeCt: 7}
  (5)
  [5 X05]
  [8 X08]
  {lev: 2 nodeCt: 4}
  (1)
  (1)
  [1 X01]
  [6 X06]
  [null]
  (3)
  (3)
  [3 X03]
  [14 X14]
  (16)
  [16 X16]
  [null]
  (4)
  (4)
  [4 X04]
  [9 X09]
  (20)
  [20 X20]
  [null]
  (10)
  (10)
  [10 X10]
  [11 X11]
  [null]
Structured list:
  {lev: 0 nodeCt: 13}
    Tree: 0
      [21 X21]
  {lev: 1 nodeCt: 7}
    Tree: 0
      | [5 X05]
      (5)
      | [8 X08]
  {lev: 2 nodeCt: 4}
    Tree: 0
      | | [1 X01]
      | (1)
      | | [6 X06]
      (1)
      | [null]
    Tree: 1
      | | [3 X03]
      | (3)
      | | [14 X14]
      (3)
      | | [16 X16]
      | (16)
      | | [null]
    Tree: 2
      | | [4 X04]
      | (4)
      | | [9 X09]
      (4)
      | | [20 X20]
      | (20)
      | | [null]
    Tree: 3
      | | [10 X10]
      | (10)
      | | [11 X11]
      (10)
      | [null]
get-min-key: 1
list-heap:
  {lev: 0 nodeCt: 13}
  [21 X21]
  {lev: 1 nodeCt: 7}
  (5)
  [5 X05]
  [8 X08]
  {lev: 2 nodeCt: 4}
  (1)
  (1)
  [1 X01]
  [6 X06]
  [null]
  (3)
  (3)
  [3 X03]
  [14 X14]
  (16)
  [16 X16]
  [null]
  (4)
  (4)
  [4 X04]
  [9 X09]
  (20)
  [20 X20]
  [null]
  (10)
  (10)
  [10 X10]
  [11 X11]
  [null]
Structured list:
  {lev: 0 nodeCt: 13}
    Tree: 0
      [21 X21]
  {lev: 1 nodeCt: 7}
    Tree: 0
      | [5 X05]
      (5)
      | [8 X08]
  {lev: 2 nodeCt: 4}
    Tree: 0
      | | [1 X01]
      | (1)
      | | [6 X06]
      (1)
      | [null]
    Tree: 1
      | | [3 X03]
      | (3)
      | | [14 X14]
      (3)
      | | [16 X16]
      | (16)
      | | [null]
    Tree: 2
      | | [4 X04]
      | (4)
      | | [9 X09]
      (4)
      | | [20 X20]
      | (20)
      | | [null]
    Tree: 3
      | | [10 X10]
      | (10)
      | | [11 X11]
      (10)
      | [null]
set-n-levels(1): successful
list-heap:
  {lev: 0 nodeCt: 13}
  [1 X01]
  [3 X03]
  [4 X04]
  [5 X05]
  [6 X06]
  [8 X08]
  [9 X09]
  [10 X10]
  [11 X11]
  [14 X14]
  [16 X16]
  [20 X20]
  [21 X21]
Structured list:
  {lev: 0 nodeCt: 13}
    Tree: 0
      [1 X01]
    Tree: 1
      [3 X03]
    Tree: 2
      [4 X04]
    Tree: 3
      [5 X05]
    Tree: 4
      [6 X06]
    Tree: 5
      [8 X08]
    Tree: 6
      [9 X09]
    Tree: 7
      [10 X10]
    Tree: 8
      [11 X11]
    Tree: 9
      [14 X14]
    Tree: 10
      [16 X16]
    Tree: 11
      [20 X20]
    Tree: 12
      [21 X21]
[The following command should generate an exception for invalid number of levels]
set-n-levels(0): Failure due to exception: "Attempt to set an invalid number of levels"
list-heap:
  {lev: 0 nodeCt: 13}
  [1 X01]
  [3 X03]
  [4 X04]
  [5 X05]
  [6 X06]
  [8 X08]
  [9 X09]
  [10 X10]
  [11 X11]
  [14 X14]
  [16 X16]
  [20 X20]
  [21 X21]
Structured list:
  {lev: 0 nodeCt: 13}
    Tree: 0
      [1 X01]
    Tree: 1
      [3 X03]
    Tree: 2
      [4 X04]
    Tree: 3
      [5 X05]
    Tree: 4
      [6 X06]
    Tree: 5
      [8 X08]
    Tree: 6
      [9 X09]
    Tree: 7
      [10 X10]
    Tree: 8
      [11 X11]
    Tree: 9
      [14 X14]
    Tree: 10
      [16 X16]
    Tree: 11
      [20 X20]
    Tree: 12
      [21 X21]
